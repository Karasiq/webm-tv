name: Create release package

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags:
      - v[0-9].[0-9]+.[0-9]+

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v3.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commitMode: true
          configurationJson: |
            {
              "template": "#{{CHANGELOG}}\n\n### ✨ Uncategorized\n#{{UNCATEGORIZED}}",
              "categories": [
                {
                  "title": "## 🚀 Features",
                  "labels": ["feature", "features"]
                },
                {
                  "title": "## 🐛 Fixes",
                  "labels": ["fix", "fixes"]
                },
                {
                  "title": "## 🧪 Other",
                  "labels": ["other"]
                },
                {
                    "title": "## 📦 Dependencies",
                    "labels": ["dependencies"]
                }
              ],
              "sort": "ASC",
              "pr_template": "- #{{TITLE}}",
              "empty_template": "- no changes",
              "label_extractor": [
                {
                  "pattern": "\\[(.*)\\].*",
                  "target": "$1"
                }
              ],
              "transformers": [
                {
                  "pattern": "\\[.*\\] (.*)",
                  "target": "$1"
                }
              ],
              "max_tags_to_fetch": 200,
              "max_pull_requests": 200,
              "max_back_track_time_days": 365
            }

      - name: Print changelog
        run: |
          echo '${{steps.github_release.outputs.changelog}}' > $GITHUB_STEP_SUMMARY

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: mikepenz/action-gh-release@v0.2.0-a03 #softprops/action-gh-release
        with:
          body: ${{steps.github_release.outputs.changelog}}
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get version
        id: version
        run: |
          git fetch --prune --unshallow
          git checkout master
          GitMessage=$(git log -1 --pretty=%B)
          VersionMsgRegex='Version ([0-9]+\.[0-9]+\.?[0-9]*).*'
          if [[ $GitMessage =~ $VersionMsgRegex ]]; then
            Version="${BASH_REMATCH[1]}"
          else
            VersionTag=$(git describe --tags --abbrev=0)
            Version="${VersionTag:1}"
          fi
          echo "::set-output name=version::$Version"
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt/boot
            ~/.cache/coursier
            **/target
          key: webm-tv-target-${{ hashFiles('**/src/main/**/*.scala', 'build.sbt', 'project/*.scala', 'project/*.sbt') }}
          restore-keys: |
            webm-tv-target-
      - name: Package ZIP
        run: |
          Version="${{steps.version.outputs.version}}"
          Universal="${{github.workspace}}/target/universal"
          JAVA_OPTS="-Xmx4G"
          rm -rf ${{github.workspace}}/target/universal/*
          sbt universal:packageBin
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app-packages
          path: |
            ${{github.workspace}}/target/universal/*.zip
      - name: Release
        if: contains(github.ref, '/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{github.workspace}}/target/universal/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Cleanup
        run: |
          rm -rf ${{github.workspace}}/target/universal/*