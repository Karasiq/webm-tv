version = "3.6.0"
runner.dialect = scala213Source3
style = defaultWithAlign
assumeStandardLibraryStripMargin = true
maxColumn = 120

align {
  preset = more
  tokens."+" = ["*>", "<*>", "<*", ">>>", "++=", "+=", ":="]
}

newlines {
  source = keep
  beforeMultiline = unfold
  forceBeforeAssign = def
  forceBeforeMultilineAssign = any
  alwaysBeforeMultilineDef = true
  avoidInResultType = true
  topLevelStatementBlankLines = [
    {blanks {before = 1, after = 1, beforeAll = 0, afterAll = 0}, regex = "(Case|Defn.Def)"},
    {maxNest = 0, blanks = 1}, // uses 2 blanks for all unindented statements
    {regex = "^Import"} // excludes import groups; blanks are not specified
  ]
}

verticalMultiline {
  arityThreshold = 5
  atDefnSite = true
}

rewrite.rules = [
  SortImports
  RedundantBraces
  RedundantParens
  PreferCurlyFors
]
rewrite.redundantBraces.stringInterpolation = true
rewrite.scala3.convertToNewSyntax = false

rewriteTokens {
  "⇒": "=>"
  "→": "->"
  "←": "<-"
}

//fileOverride {
//  "glob:**.sbt" {
//    maxColumn = 80
//    runner.dialect = scala212
//    rewrite.scala3.convertToNewSyntax = false
//    // align.preset = most
//    tokens."+" = ["++=", "+="]
//    newlines.source = fold
//    // newlines.beforeMultiline = unfold
//  }
//  "glob:**/src/test/scala/**.scala" {
//    maxColumn = 120
//    binPack.unsafeCallSite = true
//  }
//}